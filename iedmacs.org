#+title: GNU IEDmacs configuration
#+author: AreTaro
#+language: fr
#+options: ':t toc:nil num:t author:t
#+startup: content indent
#+macro: latest-export-date (eval (format-time-string "%F %T %z"))
#+macro: word-count (eval (count-words (point-min) (point-max)))


#+begin_src emacs-lisp
 __   _______  _______  .___  ___.      ___       ______     _______.
|  | |   ____||       \ |   \/   |     /   \     /      |   /       |
|  | |  |__   |  .--.  ||  \  /  |    /  ^  \   |  ,----'  |   (----`
|  | |   __|  |  |  |  ||  |\/|  |   /  /_\  \  |  |        \   \    
|  | |  |____ |  '--'  ||  |  |  |  /  _____  \ |  `----.----)   |   
|__| |_______||_______/ |__|  |__| /__/     \__\ \______|_______/    
                                                                     
#+end_src

Ceci est une Version aménagée d'Emacs pour les étudiants de l'IED8 Paris
qui le souhaitent, nommée pour l'occasion IEDmacs.

Emacs n'est peut-être pas toujours facile à prendre
en main, et certainement pas le meilleur IDE puisqu'il est loin de faire
l'unanimité, mais j'ai personnellement essayé de l'abandonner
plusieurs fois, mais à chaque fois j'y suis revenu, alors j'ai pensé
que je devais faire quelque chose pour celles et ceux qui voudrait s'y
essayer.

Ce document est une tentative d'explication du code du fichier
"init.el" qui permet de personnaliser Emacs. L'objectif est d'avoir un
version d'Emacs plus facile à prendre en main afin de rendre avec un
peu moins de difficultés les premiers devoirs (mais ça marchera aussi
pour les suivants). Ce document reprend le concept de "[[https://fr.wikipedia.org/wiki/Programmation_lettr%C3%A9e][Progammation
lettrée]]" ("Literate Programming" en anglais) qui consiste à intégrer les explications directement au sein
du code.

Emacs et Orgmode permettent de générer un fichier de code à partir
d'un fichier ~.org~ en ne conservant que les parties de code indiquées
entre des balises dans le fichier. Ainsi, le fichier "init.el"
disponible dans le dépôt est généré automatiquement à partir de ce fichier
en utilisant le raccourci ~Ctrl-c Ctrl-v Ctrl-t~.

Ce fichier est composé de plusieurs parties comme suit:
- Définitions: Lexique de certains mots ou acronymes utilisés.
- Documentation Utilisateur: Information pour l'installation et
  l'utilisation.
- Documentation Système: Description et explication du fichier
  "init.el"
- Recommandations: Informations et bonnes pratiques pour la rédaction
  et le maintient de ce dépôt.
  
* Définitions
** Integrate Development Environment (IDE)
C'est un environnement de développement logiciel qui regroupe divers
outils pour faciliter l'écriture, la compilation, le débogage et le
déploiement de programmes informatiques.
** Orgmode 
* Documentation Utilisateur
** Guide d'installation
Installation et configuration d'IEDmacs.
1. Installer Emacs
    ~sudo apt-get install emacs~
2. Installer LaTex
    ~sudo apt-get install texlive-full~
3. Télécharger les fichiers de l'IEDmacs
   #+begin_src shell
   for file in init.el ied-latex-standard.org iedmacs.org; do curl -o ~/.emacs.d/$file https://raw.githubusercontent.com/AreTaro/iedmacs/main/$file; done
   #+end_src

   Il y a quatres fichiers:
   - *init.el:* c'est le fichier lu à l'ouverture par emacs avec
     quelques packages utiles préinstallés.
   - *ied-latex-standard.org:* c'est le fichier qui permet la
     configuration pour convertir votre fichier en LaTex.
   - *iedmacs.org:* c'est le fichier qui fait office de manuel et qui
     permet de générer le fichier "init.el" de l'IEDmacs.
     
   Ceci est juste une version simplifiée d'Emacs avec quelques
   packages utiles préinstallés. Pour plus de détails, voir le
   chapitre "Documentation Système". Libre à vous de choisir un autre
   répertoire pour les fichiers mais il faudra modifier leur chemin
   d'accès dans le fichier "init".
** Guide du débutant / Tutoriel
Explications simples pour commencer à utiliser IDEmacs et exemples
concrets d'utilisation.
*** Lancer IEDmacs
Pour lancer IEDmacs utiliser la commande ~emacs &~, ou faites le
directement en cliquant sur l'icône emacs qui se sera créé après
l'installation.
*** Les Commandes de base
Il est généralement recommandé de commencer par le tutoriel
d'utilisation d'Emacs (~Ctrl-h t~) pour apprendre les nombreux
raccourcis. Mais certaines commandes seront peut-être nécessaire pour
tester et essayer rapidement IDEmacs, d'autant plus que vous serez
peut-être déjà en retard dans le rendu de vos devoirs et qu'il est
possible que vous remettiez le tutoriel à plus tard. Dans ce cas voici
quelques commandes essentiels:
- ~Ctrl-f~, ~Ctrl-b~, ~Ctrl~p~, ~Ctrl~n~: pour avancer, reculer,
    monter, descendre le curseur respectivement.
- ~Ctrl-g~ pour sortir d'un menu ou d'une commande. Souvent utile car
  dans emacs, la touche "Esc" ne permet pas toujours de s'échapper
  d'un menu.
- ~Ctrl-x Ctrl-c~ pour quitter
- ~Ctrl-x f~ pour ouvrir un fichier
- ~Ctrl-x b~ pour basculer d'une fichier ouvert (buffer) à l'autre.
Pour la liste complète, aller voir sur la [[https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf][carte de référence]].
*** Rédiger un devoir
1. Ouvrir un fichier pour le devoir
   Il y a au moins deux méthodes. La première consiste à ouvrir un
   fichier vierge et à y insérer le code nécessaire pour l'export
   LaTex en PDF. La seconde consiste à télécharger un fichier
   échantillon à le code déjà ajouté.

   *Méthode 1*

   - Utiliser la commande ~Ctrl-x Ctrl-f~ comme pour ouvrir un fichier,

   - Sélectionner le dossier où enregistrer le fichier,

   - Nommer le fichier et presser entrer. Cela ouvrira un nouveau buffer ou fichier vierge,

   - Copier le code ci-dessous, en remplaçant les informations par
     les vôtres.

    #+BEGIN_SRC  
       #+TITLE: [NOM DU CHAPITRE]
       #+SUBTITLE: [NOM DU COURS]
       #+OPTIONS: toc:t author:nil
       #+LaTeX_HEADER: \author{[PRENOM NOM] \\ N. Etudiant : [NUMERO]}
       #+SETUPFILE: ~/.emacs.d/ied-latex-standard.org

       \newpage

        * Exercice X
        ** Enoncé
        :PROPERTIES:
        :UNNUMBERED: t
        :END:

        ** Réponse
        :PROPERTIES:
        :UNNUMBERED: t
        :END:
   #+END_SRC

      *Méthode 2*
      Sur la page d'accueil de l'IEDmacs, sélectionner le lien
     "Rédiger un devoir dans l'IEDmacs". Cela ouvrira un nouveau
     buffer avec le code ci-dessus et quelques
     instructions. Enregistrer le fichier dans le répertoire et sous
     le nom de votre choix en utilisant la commande ~Ctrl-x Ctrl-s~.

2. Rédiger votre dévoir
   Utiliser la synthaxe orgmode pour écrire votre texte. Pour plus de
   détails sur la syntax voir le dépôt en anglais [[https://github.com/fniessen/refcard-org-mode][refcard-org-mode]].

   Vous pouvez également utiliser la synthaxe LaTex au sein de votre
   fichier ".org" en utilisant le raccourci ~Ctrl-c Ctrl-, l~ (Clavier
   azerty). Pour plus d'information sur la synthaxe LaTex voir le
   dépôt de [[https://github.com/amartos/TexIEDP8][amartos]].

3. Editer votre devoir au format PDF
   Une fois votre devoir ou document rédiger, il suffit d'utiliser le
   raccourci ~Ctrl-c Ctrl-e l p~, et votre fichier LaTex ainsi que le
   document PDF seront crée automatiquement.
  
** Guide de référence
Description détaillée de chaque fonctionnalité du système,
utilisation avancée et cas d'usage spécifiques.
*** La barre de commande
La bar de commande est décrite dans le fichier /init.el/ avec
~mode-line~. Pour plus de détail voir la section correspondante dans
la documentation système.

La signification de chacune des
indications est décrite ci-dessous en partant de la gauche :
- La première lettre indique le mode d'édition "E" pour /emacs/, "V"
  pour /vim/ et "I" pour le mode d'insertion de Vim.
- Les deux lettres suivantes correspondent au mode d'écriture
  (~input-mode~) avec "FR" pour le clavier français et "EN" pour le
  clavier anglais. C'est le clavier anglais qui est ouvert par
  défaut. Le clavier français est nécessaire pour écrire avec les
  accents mais vraiment tout pourri lorsqu'il faut écrire des chiffres
  ou des symboles. Désolé pour cela.
- Ensuite la date et l'heure sont affichés. Il est possible d'ajouter
  une seconde horloge en recopiant la partie de code correspondante et
  en ajoutant la zone comme suit ~"%H:%M " (current-time)
  "Europe/Berlin"~
- Le nom du buffer ouvert qui correspond aussi au nom du
  fichier ouvert est indiqué en caractère gras coloré.
- Et enfin les deux derniers chiffres séparer par ":" représente à
  gauche le numéro de ligne et à droite la colonne ou position du
  curseur sur la ligne.

Il est possible de rajouter bien d'autre option, dont l'indiquation de
la branche du dépôt git. Pour cela ajouter le code suivant à l'endroit
voulu :

#+begin_src emacs-lisp
'(:eval (propertize (replace-regexp-in-string
                    "^ Git:" "" vc-mode )
                    'face 'warning) )
#+end_src
   
*** Lire les PDF
C'est le paquet ~pdf-tool~ qui est utilisé. Ce paquet permet de
visualiser et annoter un document PDF directement dans l'IEDmacs. Il
est aussi très utile lors de l'export de devoir, car la commande ~C-v
C-e l o~ permet d'ouvrir le document directement dans l'IEDmacs après
son export, et ainsi de vérifier ou non sa conformité avec ses
attentes.

- ~+~ ou ~-~ pour le zoom avant et arrière
- ~H~ pour ajuster en hauteur
- ~W~ pour ajuster en largeur
- ~P~ pour ajuter à la page
- ~n~ page suivante
- ~p~ page précédente
- ~Ctrl-n~ pour descendre dans la page
- ~Ctrl-p~ pour monter dans la page
- ~o~ pour afficher la table de matière
- ~Alt-g g~ pour sauter à une page indiquée

Pour plus d'informations pour l'instant consulté le dépôt Github du
paquet en anglais : [[https://github.com/vedang/pdf-tools/tree/30b50544e55b8dbf683c2d932d5c33ac73323a16?tab=readme-ov-file#view-and-navigate-pdfs][git repository]].
  
*** Le thème
Il existe beaucoup de thèmes et chacun choisit ou modifie généralement
le sien selon ses préférences. Pour l'IEDmacs c'est le thème crée par
"Prot" (voir "Les Oracles"). Il a été choisi pour son confort de
lecture, aussi bien en mode sombre et clair.

Voici quelques commandes utile pour le thème:
- ~Alt-x load-theme~ pour choisir un autre thème
- ~Alt-x modus-theme-select~ pour choisir un autre thème parmis le
  thème "modus" de Prot.
- ~Alt-x my-modus-themes-select~ pour passer du mode sombre au mode
  clair.

Pour plus de faciliter vous pouver créer des raccourcis vers ces
fonctions.

*** Org-mode
Ici vous trouverez quelques tuyaux pour rédiger vos documents en
org-mode avant de les exporter en LaTex et PDF.
**** Lien long à exporter avec retour à la ligne

Pour intégrer une longue adresse URL dans votre texte, il suffit de
l'indiquer en tant qu'hyperlien, comme indiqué ci-dessous. N'oubliez
pas d'appuyer sur les touches ~Alt-q~ sur votre ligne ou paragraphe
pour que Org mode ajuste correctement la mise en forme.

#+begin_src 
[[https://www.geeksforgeeks.org/inputouput-external-files-cc-java-python-competitive-programming/][https://www.geeksforgeeks.org/inputouput-external-files-cc-java-python-competitive-programming/]]
#+end_src

**** Les balises "src_export latex"
Très utile dans un document Org-mode pour écrire du texte comme si
c'était du LaTex.

Pour utiliser les balises utiliser la commande ~Ctrl-c Ctrl-,
l~. (Note cette commande est valable pour les claviers qwerty, sur un
clavier azerty ce serait peut-être ~Ctrl-c Ctrl-; l~.)

***** Ecrire un mot au format code

Pour écrire un mot comme avec les balises "~ ~" en orgmode, équivalent
de "` `" en markdown, utilisez directement au sein de votre texte
~texttt{}~ comme dans l'exemple suivant :

#+begin_export latex
  Pour changer de répertoire utiliser la commande \texttt{cd} sur la
  ligne de commande.
#+end_export

***** Ecrire le symbole "_"

Utiliser le symbole ci-dessous dans un "#+begin_export latex"

#+begin_src latex
 La constante "STDIN\_{}FILENO" est définie dans librairie "unistd.h".
#+end_src

***** Ecrire du code C

Pour écrire du code il préférable d'utiliser les balises
"#+begin_export latex". Les paramètres proposés ci-desssous peuvent
être modifiés selon vos besoins et envies.

Pour insérer du code C insérer le bloc suivant :

#+begin_export latex
\lstset{
language=C, % Spécifie que le code est en Python
basicstyle=\sffamily\small, % Police pour le code
keywordstyle=\bfseries\color{blue}, % Mots-clés en bleu et gras
identifierstyle=\itshape\color{violet},
commentstyle=\color{gray}, % Commentaires en vert
stringstyle=\color{black}, % Chaînes en rouge
frame=single, % Ajoute un cadre autour du code
backgroundcolor=\color{white}, % Fond blanc clair pour le code
breaklines=true, % Retours à la ligne automatiques
}

\begin{text}
% cet espace permet de faire un saut de ligne
\begin{lstlisting}
< Copiez votre code ici >
\end{lstlisting}
\end{text}
#+end_export

** Notes de version
   Informations sur les changements importants.
*** nom des versions
Voici les noms suggérés pour les prochaines versions. Il y a de quoi
voir venir, et encore de longues années devant pour l'IEDmacs.

1. Apollon Funky
2. Héra Cyber
3. Izanagi Groovy
4. Sarasvati Electro
5. Kuan Yin Techno
6. Dionysos Chic
7. Amaterasu Hyper
8. Vishnu Digital
9. Héphaïstos Psy
10. Benten Electro
11. Ares Techno
12. Inari Gigabyte
13. Parvati Turbo
14. Tsukuyomi Synthwave
15. Krishna Pixel
16. Athena Futuriste
17. Izanami Electro
18. Shiva Néon
19. Hestia Techno
20. Benzaiten Globo

**Apollon Funky**
- *0.0.0* Première version, Novembre 2024
- *0.3.0*: which-key menu rendu visible
- *0.4.0*: pdf-tools, barre de commande modifiée
- *0.5.0*: nouvelle police pour l'export LaTex
   
** Carte de référence rapide
   Aide-mémoire des commandes et raccourcis clavier les plus utilisés.
** Gestion des paquets et extensions
* Documentation Système
** Principes du Système
Objectifs et philosophie de conceptions d'IDEmacs.
** Spécification / Conception
Lors de son démarrage, Emacs recherche d'abord un fichier nommé
"init.el" contenant du code Lisp qu'il exécute. Le fichier "init.el"
de l'IEDmacs est automatiquement généré par des blocs de code
spécifiques. Tout bloc de code commençant par une directive ~:tangle
"init.el"~ sera inclus dans le fichier "init.el" généré en utilisant la
commande ~Ctrl-c Ctrl-v Ctrl-t~.

Pour personnaliser votre configuration dans l'IEDmacs, vous pouvez
ajouter ou supprimer des blocs de code selon vos besoins. Vous pouvez
également activer ou désactiver des commandes en supprimant ou en
ajoutant les symboles ~;;~ devant la ou les commandes souhaitées.

*** Entête du fichier
Par convention les informations sur la version sont indiqués au début
du fichier "init.el". Ainsi lorsque plusieurs version sont utilisées,
il est possible de rapidement indentifier la version actuelle du
fichier "init.el" en utilisant la commande ~head 10
~/.emacs.d/init.el~.

#+begin_src emacs-lisp :tangle "init.el"
  ;; IDEmacs by Emacs, un IDE pour l'IED.
  ;; VERSION : Apollon Funky 0.4.0
  ;; LICENCE : GPLV3
#+end_src

*** Fenêtre d'accueil
Cette section concerne tout ce qui touche à l'aspect d'IEDmacs à
l'ouverture mais aussi tout au long de son utilisation.

   #+begin_src emacs-lisp :tangle "init.el"
     ;; Supprimer le message de démarrage
     (setq inhibit-startup-message t)

     ;; Supprimer le bar de menu
     (menu-bar-mode -1)

     ;; Supprimer la bar d'icon
     (tool-bar-mode -1)

     ;; Lancer le buffer de démarrage
     (add-hook 'emacs-startup-hook 'iedmacs-startup-buffer)
#+end_src

*** Buffers personnalisés

**** Startup Buffer

#+begin_src emacs-lisp :tangle "init.el"
  (defun iedmacs-startup-buffer ()
    "Créez un buffer de démarrage pour IEDmacs avec un logo, une explication et des liens utiles."
    (let ((buffer (get-buffer-create "*IEDmacs*")))
      (with-current-buffer buffer
        (erase-buffer)

        (let* ((ascii-title '(
                              "  __   _______  _______  .___  ___.      ___       ______     _______. "
                              " |  | |   ____||       \\ |   \\/   |     /   \\     /      |   /       | "
                              " |  | |  |__   |  .--.  ||  \\  /  |    /  ^  \\   |  ,----'  |   (----` "
                              " |  | |   __|  |  |  |  ||  |\\/|  |   /  /_\\  \\  |  |        \\   \\     "
                              " |  | |  |____ |  '--'  ||  |  |  |  /  _____  \\ |  `----.----)   |    "
                              " |__| |_______||_______/ |__|  |__| /__/     \\__\\ \\______|_______/     "
                              ))
               (subtitle "Un IDE pour l'IED")
               (width (window-body-width))
               (padding-title (max 0 (/ (- width (length (car ascii-title))) 2)))
               (padding-subtitle (max 0 (/ (- width (length subtitle)) 2))))

          ;; Insérez un titre ASCII avec des marges.
          (dolist (line ascii-title)
            (insert (make-string padding-title ?\s)) ; add padding spaces
            (insert line "\n"))

          ;; Insérer un sous-titre avec des marges
          (insert "\n" (make-string padding-subtitle ?\s) subtitle "\n\n"))

        ;; Paragraphe - Raccourcis utiles
        (insert "Les commandes de bases:\n\n")

        ;; List des raccourcis
        (insert (propertize "Ctrl-f" 'face 'bold) ": avancer le curseur\n")
        (insert (propertize "Ctrl-b" 'face 'bold) ": reculer le curseur\n")
        (insert (propertize "Ctrl-p" 'face 'bold) ": monter le curseur\n")
        (insert (propertize "Ctrl-n" 'face 'bold) ": descendre le curseur\n")
        (insert (propertize "Ctrl-g" 'face 'bold) ": sors moi de cette m****!\n")
        (insert (propertize "Ctrl-x Ctrl-f" 'face 'bold) ": pour ouvrir ou créer un fichier\n")
        (insert (propertize "Ctrl-x b" 'face 'bold) ": pour basculer d'une fichier ouvert (buffer) à l'autre.\n")
        (insert (propertize "Ctrl-x Ctrl-c" 'face 'bold) ": pour quitter\n\n")

        ;; paragraphe
        (insert "Pour celles et ceux qui sont familiers avec les commandes VIM, activer les avec la commande : ")
        (insert (propertize "\"Alt-x evil-mode\"" 'face 'bold) ". Ensuite pour passer d'un mode de saisi à l'autre utiliser la commande ")
        (insert (propertize "Ctrl-z" 'face 'bold) ".\n\n")

        ;; Liens
        (insert "Liens utiles:\n")
        (insert-text-button "Rédiger un devoir avec l'IEDmacs"
                          'action (lambda (_) (modele-devoir-ied-buffer))
                          'follow-link t)
        (insert "\n")
        (insert-text-button "Le Wiki Paris 8 IED"
                            'action (lambda (_) (wiki-ied-buffer))
                            'follow-link t)
                            ;;'action (lambda (_) (browse-url "https://wiki.paris8-ied.net/"))
                            ;;'follow-link t)
        (insert "\n")
        (insert-text-button "Carte de références des raccourcis en français"
                            'action (lambda (_) (browse-url "https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf"))
                            'follow-link t)
        (insert "\n")
        (insert-text-button "Tutorial Emacs en français (ENS)"
                            'action (lambda (_) (eww "https://tuteurs.ens.fr/unix/editeurs/emacs.html"))
                            'follow-link t)
        (insert "\n\n")

        ;; Mot de la fin
        (insert "Pour plus d'information sur la configuration de l'IEDmacs, vous pouvez vous référer au fichier: ")
        (insert-text-button "iedmacs.org\n"
                    'action (lambda (_) (find-file "~/.emacs.d/iedmacs.org"))
                    'follow-link t) 

        ;; Configurer le buffer en mode read-only
        (setq buffer-read-only t))
      ;; Afficher le buffer 
      (switch-to-buffer buffer)))

#+end_src

**** Modèle de devoir

#+begin_src emacs-lisp :tangle "init.el"
  (defun modele-devoir-ied-buffer ()
  "Creation d'un nouveau buffer avec un modèle pour les devoirs."
  (let ((buffer (get-buffer-create "*Devoir*")))
    (with-current-buffer buffer
      (erase-buffer)
      (org-mode)  ;; Basculer en Orgmode
      ;; Insérer le contenu du modèle
      (insert "#+TITLE: [NOM DU CHAPITRE]\n")
      (insert "#+SUBTITLE: [NOM DU COURS]\n")
      (insert "#+OPTIONS: toc:t author:nil\n")
      (insert "#+LaTeX_HEADER: \\author{[PRENOM NOM] \\\\ N. Etudiant : [NUMERO]}\n")
      (insert "#+SETUPFILE: ~/.emacs.d/ied-latex-standard.org\n\n")
      (insert "\\newpage\n\n")
      (insert "* Exercice X\n")
      (insert "** Enoncé\n")
      (insert " :PROPERTIES:\n")
      (insert " :UNNUMBERED: t\n")
      (insert " :END:\n\n")
      (insert "** Réponse\n")
      (insert " :PROPERTIES:\n")
      (insert " :UNNUMBERED: t\n")
      (insert " :END:\n\n")
      (insert " Instructions:\n")
      (insert " 1. Remplacer les blocks indiqués par [] par vos informations\n")
      (insert " 2. Rédiger votre devoir en utilisant la synthaxe Orgmode\n")
      (insert " 3. Enregister votre devoir avec la commande " (propertize "Ctrl-x Ctrl-s" 'face 'bold)".\n")
      (insert " 4. Une fois terminé, utilisez la commande " (propertize "Ctrl-c Ctrl-e l p" 'face 'bold)" pour convertir\n")
      (insert "    votre fichier en LaTex puis pour créer le pdf correspondant.\n")
      ;; Basculer vers le nouveau modèle
      (switch-to-buffer buffer))))
#+end_src

**** Wiki IED 8
Le wiki est ouvert avec eww, et cela ne permet pas d'afficher les
différents menus qui sont sur le côté gauche de la page html. Ainsi un
buffer est crééer afin de reprendre les liens vers les principaux
chapitres.

#+begin_src emacs-lisp :tangle "init.el"
  (defun wiki-ied-buffer ()
  "Creation d'un nouveau buffer qui affiche les liens vers les chapitres du Wiki"
  (let ((buffer (get-buffer-create "*WikiIED8*")))
    (with-current-buffer buffer
      (erase-buffer)
      ;; Insérer le contenu du modèle
      (insert (propertize "Sommaire du Wiki\n\n" 'face 'bold))
      (insert "Cliquer sur le lien pour ouvrir la page dans eww (Emacs Web Browser)\n\n")

      ;; Paragraphe - Raccourcis utiles eww
      (insert "Les commandes utiles pour naviguer avec eww:\n\n")

      ;; List des raccourcis
      (insert (propertize "r" 'face 'bold) ": page eww précédente\n")
      (insert (propertize "l" 'face 'bold) ": page eww suivante \n")
      (insert (propertize "H" 'face 'bold) ": historique des pages eww\n\n")

      ;; Paragraphe - Raccourcis utiles emacs
      (insert "Petit rappel des commandes Emacs:\n\n")
      (insert (propertize "Ctrl-f" 'face 'bold) ": avancer le curseur\n")
      (insert (propertize "Ctrl-b" 'face 'bold) ": reculer le curseur\n")
      (insert (propertize "Ctrl-p" 'face 'bold) ": monter le curseur\n")
      (insert (propertize "Ctrl-n" 'face 'bold) ": descendre le curseur\n")
      (insert (propertize "Ctrl-g" 'face 'bold) ": sors moi de cette m****!\n")
      (insert (propertize "Ctrl-x b" 'face 'bold) ": pour basculer d'une fichier ouvert (buffer) à l'autre.\n\n")

      ;; Sommaire
      (insert (propertize "Général" 'face 'bold) "\n\n")
      (insert-text-button "Trucs cools"
                          'action (lambda (_) (eww "https://wiki.paris8-ied.net/fr/general/cool"))
                          'follow-link t)
      (insert "\n")
      (insert-text-button "Installation sur ce serveur Wiki"
                          'action (lambda (_) (eww "https://wiki.paris8-ied.net/fr/general/installation"))
                          'follow-link t)
      (insert "\n\n")
      (insert (propertize "Informations" 'face 'bold) "\n\n")
      (insert-text-button "Licence 1"
                          'action (lambda (_) (eww "https://wiki.paris8-ied.net/fr/L1"))
                          'follow-link t)
      (insert "\n")
      (insert-text-button "Licence 2"
                          'action (lambda (_) (eww "https://wiki.paris8-ied.net/fr/L2"))
                          'follow-link t)
      (insert "\n")
      (insert-text-button "Licence 3"
                          'action (lambda (_) (eww "https://wiki.paris8-ied.net/fr/L3"))
                          'follow-link t)


        ;; Configurer le buffer en mode read-only
        (setq buffer-read-only t))
    
      ;; Basculer vers le nouveau modèle
      (switch-to-buffer buffer)))
#+end_src

*** Barre de commande
Le bloc ci-dessous permet de controler l'apparance de la barre de
commande en bas de la fenêtre.

#+begin_src emacs-lisp :tangle "init.el"
  (display-time-mode 1)
  (setq display-time-day-and-date t)
  (setq column-number-mode t)
  (setq column-line-mode t)

  (setq-default mode-line-format
                (list
                 '(:eval (propertize
                          (if (and (boundp 'evil-state)
                                (eq evil-state 'normal) )
                            " V " ;; VIM
                            (if (and (boundp 'evil-state)
                                    (eq evil-state 'insert) )
                            " I " ;; Insert
                            " E ") ) ;; Emacs
                        'face 'cursor) )
                 '(:eval (if current-input-method
                            (propertize "FR" 'face 'italic)
                          (propertize "EN" 'face 'italic) ) )
                 '(:eval
                     (propertize
                     (format-time-string
                     "  %-d/%-m %H:%M " (current-time) )
                     'face 'shadow) ) 
                 ;;'default-directory
                 '(:eval (propertize (format-mode-line
                                     mode-line-buffer-identification)
                                     'face 'success) )
                 '(:eval (propertize " %l:%c " 'face 'shadow))
                 ) ) 
#+end_src

La fonction `mode-line-window-selected-p` permet d'indiquer quel
buffer est active lorsqu'il y a plusieurs fenêtres ouverte. "Return
non-nil if we're updating the mode line for the selected window. This
function is meant to be called in `:eval' mode line constructs to
allow altering the look of the mode line depending on whether the mode
line belongs to the currently selected window or not."

#+begin_src emacs-lisp :tangle "init.el"
  ;; Define a function to only active setting when buffer is active
  (defun mode-line-window-selected-p ()
      (let ((window (selected-window)))
      (or (eq window (old-selected-window))
          (and (minibuffer-window-active-p (minibuffer-window))
                  (with-selected-window (minibuffer-window)
                  (eq window (minibuffer-selected-window)))))))
#+end_src

*** Les packages

#+begin_src emacs-lisp :tangle "init.el"
  ;; Install MELPA package
  (require 'package)
  (setq package-enable-at-startup nil)
  (add-to-list 'package-archives
               '("melpa" . "https://melpa.org/packages/"))
  (package-initialize)
  (package-refresh-contents)

  ;; PACKAGE NAME: Use-package
  ;; PURPOSE: to easily install package
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

  ;; PACKAGE NAME: try
  ;; PURPOSE: to try package without install them
  (use-package try
    :defer t
    :ensure t)

  ;; PACKAGE NAME: whick-key
  ;; PURPOSE: to help to find next key, using a
  ;; menu at the bottom of the window
  (use-package which-key
    :ensure t
    :config (which-key-mode))
#+end_src

*** Le thème
Il existe beaucoup de thèmes et chacun choisit ou modifie le sien
selon ses préférences. Pour l'IEDmacs c'est le thème crée par "Prot"
(voir "Les Oracles"). Il a été choisi pour son confort.

#+begin_src emacs-lisp :tangle "init.el"
  ;; PACKAGE NAME: modus-themes
  ;; PURPOSE: theme by Protesilaos Stavrou
  (use-package modus-themes
    :defer t
    :ensure t)

  ;; Ligth theme
  (load-theme 'modus-operandi-deuteranopia :no-confirm)

  (defun my-modus-themes-toggle ()
    "Toggle between `modus-operandi' and `modus-vivendi' themes.
  This uses `enable-theme' instead of the standard method of
  `load-theme'.  The technicalities are covered in the Modus themes
  manual."
    (interactive)
    (pcase (modus-themes--current-theme)
      ('modus-operandi-deuteranopia (progn (enable-theme 'modus-vivendi-tinted)
                              (disable-theme 'modus-operandi-deuteranopia)))
      ('modus-vivendi-tinted (progn (enable-theme 'modus-operandi-deuteranopia)
                              (disable-theme 'modus-vivendi-tinted)))
      (_ (error "No Modus theme is loaded; evaluate `modus-themes-load-themes' first"))))
#+end_src

*** Ace window

#+begin_src emacs-lisp :tangle "init.el"
  ;; PACKAGE NAME: ace-window
  ;; PURPOSE: select a window more easily
  (global-set-key (kbd "M-o") 'ace-window)

  ;; PACKAGE NAME: swiper
  ;; PURPOSE: facilitate search in a document
  (use-package counsel
    :ensure t
    )

  (use-package swiper
    :ensure t
    :config
    (progn
      (ivy-mode)
      (setq ivy-use-virtual-buffers t)
      (setq enable-recursive-minibuffers t)
      ;; enable this if you want `swiper' to use it
      ;; (setq search-default-mode #'char-fold-to-regexp)
      (global-set-key "\C-s" 'swiper)
      (global-set-key (kbd "C-c C-r") 'ivy-resume)
      (global-set-key (kbd "<f6>") 'ivy-resume)
      (global-set-key (kbd "M-x") 'counsel-M-x)
      (global-set-key (kbd "C-x C-f") 'counsel-find-file)
      (global-set-key (kbd "<f1> f") 'counsel-describe-function)
      (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
      (global-set-key (kbd "<f1> o") 'counsel-describe-symbol)
      (global-set-key (kbd "<f1> l") 'counsel-find-library)
      (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
      (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
      (global-set-key (kbd "C-c g") 'counsel-git)
      (global-set-key (kbd "C-c j") 'counsel-git-grep)
      (global-set-key (kbd "C-c k") 'counsel-ag)
      (global-set-key (kbd "C-x l") 'counsel-locate)
      (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
      (define-key minibuffer-local-map (kbd "C-r") 'counsel-minibuffer-history)
      ))
#+end_src

*** Evil Mode

#+begin_src emacs-lisp :tangle "init.el"
  ;; ====== EVIL MODE SETTINGS ========
  ;; PACKAGE: evil
  ;; PURPOSE: using Vim shortcuts in emacs 
  (use-package evil
    :ensure t
    :init(setq evil-want-C-i-jump nil))

  (setq evil-default-state 'normal)
  (require 'evil)
  (evil-mode 0)

  ;; Biding keys
  ;; to change evil to emacs C-z
  (evil-set-leader 'normal (kbd "SPC"))
  (evil-define-key 'normal 'global (kbd "<leader>bs") 'save-buffer)
  (evil-define-key 'normal 'global (kbd "<leader>bb") 'switch-to-buffer)
  (evil-define-key 'normal 'global (kbd "<leader>ff") 'find-file)
  (evil-define-key 'normal 'global (kbd "<leader>ts") 'modus-themes-select) 
  (evil-define-key 'normal 'global (kbd "<leader>tt") 'my-modus-themes-toggle) 
  (evil-define-key 'normal 'global (kbd "<leader>1") 'delete-other-windows) 
  (evil-define-key 'normal 'global (kbd "<leader>ws") 'ace-select-window) 
  (evil-define-key 'normal 'global (kbd "<leader>wd") 'ace-delete-window) 
  (evil-define-key 'normal 'global (kbd "<leader>w1") 'ace-delete-other-windows) 
  (evil-define-key 'normal 'global (kbd "<leader>bk") 'save-buffers-kill-terminal)
  (evil-define-key 'normal 'global (kbd "<leader>w-") 'split-window-below) 
  (evil-define-key 'normal 'global (kbd "<leader>w/") 'split-window-right) 
  (evil-define-key 'normal 'global (kbd "<leader>bn") 'next-buffer) 
  (evil-define-key 'normal 'global (kbd "<leader>bp") 'previous-buffer)
  (evil-define-key 'normal 'global (kbd "<leader>fc") 'counsel-find-file)
  (evil-define-key 'normal 'global (kbd "<leader>bl") 'list-buffers)
  (evil-define-key 'normal 'global (kbd "<leader>tl") 'load-themes)
  (evil-define-key 'normal 'global (kbd "<leader>ss") 'swiper)
  (evil-define-key 'normal 'global (kbd "<leader>l") 'org-insert-link)
#+end_src

*** pdf-tools
Paquet permettant de visualiser et modifier les fichiers PDF. Utiliser
également lors de l'export avec la commande ~C-v C-e l o~ dont le "o"
final signifie "open", et qui ouvre le PDF fraîchement créé. Pour plus
d'information sur son utilisation voir le manuel utilisateur.

#+begin_src emacs-lisp :tangle "init.el"
  (use-package pdf-tools
    :ensure t
    :defer t
    :config
    (pdf-tools-install) )
#+end_src

*** Autres

#+begin_src emacs-lisp :tangle "init.el"
  ;; ido to easy find the names of files, docs, when searching
  (setq indo-enable-flex-matching t)
  (setq ido-everywhere t)
  (ido-mode 1)

  ;; better visualization of buffer-list
  (defalias 'list-buffers 'ibuffer)
  ;;(defalias 'list-buffers 'ibuffer-other-window)

  ;; to set up the directory file, when opening new file
  (setq default-directory "~/")

  ;; to display line number
  ;; (global-display-line-numbers-mode)

  ;; Org mode stuff
  (use-package org-bullets
    :defer t
    :ensure t
    :config
    (add-hook 'org-mode-hook 'org-bullets-mode))

  ;; for converting org to pdf
  ;; defined org-plain-latex used in latex-standard.org
  (with-eval-after-load 'ox-latex
    (add-to-list 'org-latex-classes
                 '("org-plain-latex"
                   "\\documentclass{article}
             [NO-DEFAULT-PACKAGES]
             [PACKAGES]
             [EXTRA]"
                   ("\\section{%s}" . "\\section*{%s}")
                   ("\\subsection{%s}" . "\\subsection*{%s}")
                   ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                   ("\\paragraph{%s}" . "\\paragraph*{%s}")
                   ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
#+end_src

#+begin_src emacs-lisp 
     ;;==== AUTOMATICALLY ADD BY EMACS ======

     (custom-set-variables
      ;; custom-set-variables was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      '(custom-safe-themes
        '("c7a926ad0e1ca4272c90fce2e1ffa7760494083356f6bb6d72481b879afce1f2" "0f76f9e0af168197f4798aba5c5ef18e07c926f4e7676b95f2a13771355ce850" default))
      '(package-selected-packages '(which-key try use-package)))
     (custom-set-faces
      ;; custom-set-faces was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      '(aw-leading-char-face ((t (:inherit ace-jump-face-foreground :height 3.0)))))
#+end_src

** A faire
*** Ajouter pdf-tools
#+begin_src emacs-lips
  (use-package pdf-tools
    :ensure t
    :config (pdf-tools-install))

  (use-package org-pdfview
    :ensure t)
#+end_src

* Recommandations
* Sources
